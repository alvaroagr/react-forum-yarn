{"version":3,"sources":["components/Home.js","components/message/Message.js","config/firebase.js","components/message/Messages.js","components/message/MessageForm.js","components/message/MessageAdd.js","components/message/MessageInfo.js","components/message/MessageEdit.js","components/message/MessageReply.js","components/user/User.js","components/user/UserList.js","components/user/Users.js","components/user/UserAdd.js","config/Router.js","App.js","serviceWorker.js","index.js"],"names":["Home","Component","Message","message","this","props","msg","replies","undefined","children","length","to","id","user","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","getMessage","collection","doc","get","getChildrenByParent","where","getParentByChildren","getMessages","submitMessage","set","merge","deleteMessage","parent","then","data","splice","indexOf","delete","getUsers","submitUser","deleteUser","Messages","state","messages","querySnapshot","forEach","push","setState","msgList","map","item","key","className","type","MessageForm","content","event","preventDefault","console","log","Math","floor","random","toString","onSubmit","onCancel","target","value","handleSubmit","bind","onChange","handleChange","htmlFor","onClick","handleCancel","nextProps","prevState","MessageAdd","history","MessageInfo","params","match","exists","chi","dad","theParent","btn","handleDelete","MessageEdit","MessageReply","parentmsg","reply","User","name","lastname","email","password","activo","UserList","userList","users","colSpan","Users","refresh","UserAdd","e","md5","hex_md5","placeholder","routing","basename","path","component","from","exact","App","Router","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c2c11f23.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Home extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Message extends Component {\r\n\r\n    render() {\r\n        let message = this.props.msg;\r\n        let replies = 0\r\n        if(message.children !== undefined){\r\n            replies = message.children.length;\r\n        }\r\n        return (\r\n            <tr>\r\n                <td><Link to={`/messages/${message.id}`}>{message.message}</Link></td>\r\n                <td>{message.user}</td>\r\n                <td>{replies}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n}","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCdMMXBjykg-rbamB4ESvO81C2cyEQqhGg\",\r\n    authDomain: \"react-forum-73e8a.firebaseapp.com\",\r\n    databaseURL: \"https://react-forum-73e8a.firebaseio.com\",\r\n    projectId: \"react-forum-73e8a\",\r\n    storageBucket: \"react-forum-73e8a.appspot.com\",\r\n    messagingSenderId: \"598601410239\",\r\n    appId: \"1:598601410239:web:40596151db33aca083880a\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nlet db = firebase.firestore();\r\n\r\nexport default {\r\n\r\n\r\n    getMessage(id) {\r\n        return db.collection('messages').doc(id).get()\r\n    },\r\n\r\n    getChildrenByParent(id) {\r\n        return db.collection('messages').where('parent', '==', id).get()\r\n    },\r\n\r\n    getParentByChildren(id) {\r\n        return db.collection('messages').where('children', 'array-contains', id).get()\r\n    },\r\n\r\n    getMessages() {\r\n        return db.collection('messages').where('parent', '==', null).get()\r\n    },\r\n\r\n    submitMessage(msg) {\r\n        return db.collection(\"messages\").doc(msg.id).set(msg, { merge: true })\r\n    },\r\n\r\n    deleteMessage(msg) {\r\n        if (msg.parent !== undefined) {\r\n            let parent = {\r\n                children: []\r\n            }\r\n            this.getMessage(msg.parent).then(doc => {\r\n                parent = doc.data();\r\n                parent.children.splice(parent.children.indexOf(msg.id), 1);\r\n                this.submitMessage(parent)\r\n            })\r\n        }\r\n        return db.collection(\"messages\").doc(msg.id).delete()\r\n    },\r\n\r\n    getUsers() {\r\n        return db.collection(\"users\").get()\r\n    },\r\n\r\n    submitUser(user) {\r\n        return db.collection(\"users\").doc(user.id).set(user, { merge: true })\r\n    },\r\n\r\n    deleteUser(user) {\r\n        return db.collection(\"users\").doc(user.id).delete()\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Message from './Message'\r\nimport firebase from '../../config/firebase.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Messages extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            messages: [],\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        let messages = [];\r\n        firebase.getMessages().then(\r\n            (querySnapshot) => {\r\n                querySnapshot.forEach(\r\n                    doc => messages.push(doc.data())\r\n                );\r\n                this.setState(\r\n                    { messages }\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        let messages = [];\r\n        firebase.getMessages().then(\r\n            (querySnapshot) => {\r\n                querySnapshot.forEach(\r\n                    doc => messages.push(doc.data())\r\n                );\r\n                this.setState(\r\n                    { messages }\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let msgList = this.state.messages.map(\r\n            (item) =>\r\n                (<Message key={item.id} msg={item} />)\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <table className=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Mensaje</th>\r\n                            <th>Autor</th>\r\n                            <th>Respuestas</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {msgList}\r\n                    </tbody>\r\n                </table>\r\n                <Link to=\"/messages/add\"><button type=\"button\" className=\"btn btn-success\">Nuevo Mensaje</button></Link>\r\n            </div>\r\n\r\n\r\n            // <div>\r\n            //     <MessageList msgs={this.state.messages} />\r\n\r\n            //     <Link to=\"/messages/add\"><button type=\"button\" className=\"btn btn-success\">Nuevo Mensaje</button></Link>\r\n\r\n            // </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class MessageForm extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            parent: \"\",\r\n            children: [],\r\n            message: \"\",\r\n            content: \"\",\r\n            user: \"\",\r\n            id: \"\"\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.msg.id !== prevState.id) {\r\n            return {\r\n                parent: nextProps.msg.parent,\r\n                children: nextProps.msg.children,\r\n                id: nextProps.msg.id,\r\n                user: nextProps.msg.user,\r\n                message: nextProps.msg.message,\r\n                content: nextProps.msg.content\r\n            };\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(this.state.message)\r\n\r\n        let id = (this.state.id === \"\" || this.state.id === undefined) ? Math.floor(Math.random() * 255).toString() : this.state.id;\r\n\r\n        let msg = {\r\n            id: id,\r\n            message: this.state.message,\r\n            user: this.state.user,\r\n            content: this.state.content\r\n        }\r\n        this.props.onSubmit(msg);\r\n    }\r\n\r\n    handleCancel(event) {\r\n        this.props.onCancel(event);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <input type=\"hidden\" className=\"form-control\" id=\"id\" value={this.state.id} onChange={this.handleChange.bind(this)} />\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"user\">Autor</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"user\" value={this.state.user} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"message\">Mensaje</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"message\" value={this.state.message} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"content\">Contenido</label>\r\n                        <textarea className=\"form-control\" id=\"content\" value={this.state.content} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    <button className=\"btn btn-secondary\" onClick={this.handleCancel.bind(this)}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport firebase from '../../config/firebase.js'\r\n// import api from '../../config/api.js'\r\nimport MessageForm from './MessageForm'\r\n\r\nexport default class MessageAdd extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            msg: {},\r\n            // db: firebase.firestore()\r\n        }\r\n    }\r\n\r\n    handleSubmit(message) {\r\n        console.log(message)\r\n        message.parent = null\r\n        firebase.submitMessage(message)\r\n            .then(() => {\r\n                console.log('saved:', message);\r\n                const { history } = this.props;\r\n                history.push(`/messages/${message.id}`);\r\n            });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        const { history } = this.props;\r\n        history.push(`/messages`)\r\n        console.log(\"You've cancelled the submission.\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Nuevo Mensaje</h2>\r\n                <MessageForm msg={this.state.msg} onSubmit={this.handleSubmit.bind(this)} onCancel={this.handleCancel.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport firebase from '../../config/firebase'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class MessageInfo extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            message: {\r\n                parent: \"\",\r\n                id: \"\",\r\n                user: \"\",\r\n                message: \"\",\r\n                content: \"\",\r\n                children: []\r\n            },\r\n            parent: {},\r\n            children: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: { params } } = this.props;\r\n\r\n        // Get Reply Data\r\n        firebase.getChildrenByParent(`${params.id}`).then(\r\n            querySnapshot => querySnapshot.forEach(\r\n                doc => {\r\n                    this.state.children.push(doc.data())\r\n                }\r\n            )\r\n        )\r\n\r\n        // Get Parent Data\r\n        firebase.getParentByChildren(`${params.id}`).then(\r\n            querySnapshot => querySnapshot.forEach(\r\n                doc => {\r\n                    this.setState({parent: doc.data()})\r\n                }\r\n            )\r\n        )\r\n\r\n        // Get Message Data\r\n        firebase.getMessage(`${params.id}`)\r\n            .then(doc => {\r\n                if (!doc.exists) {\r\n                    console.log('No such document!');\r\n                } else {\r\n                    // console.log('Message data:', doc.data());\r\n                    this.setState({ message: doc.data() });\r\n                }\r\n            });\r\n\r\n\r\n        // console.log(\"Reply data: \", this.state.children)\r\n    }\r\n\r\n    handleDelete() {\r\n        const { history } = this.props;\r\n        firebase.deleteMessage(this.state.message)\r\n            .then(() => {\r\n                console.log(\"message deleted\")\r\n                history.push(\"/messages\")\r\n            });\r\n    }\r\n\r\n    render() {\r\n        // State made variables.\r\n        let msg = this.state.message;\r\n        let chi = this.state.children;\r\n        let dad = this.state.parent;\r\n\r\n        // HTML CONDITIONAL CODE\r\n        let theParent = \"\";\r\n        let btn = []\r\n\r\n        if (msg.parent !== undefined && msg.parent !== null) {\r\n            theParent = \r\n            <tr key={msg.id} className=\"table-success text-right\">\r\n                <td>\r\n                    <div className=\"container\">\r\n                        <b>{dad.user} • <Link className=\"text-dark\" to={`/reply/${msg.parent}`}>{dad.message}</Link></b>\r\n                        <p>{dad.content}\r\n                        <br></br>\r\n                        Respuestas: {dad.children === undefined ? 0 : dad.children.length}</p>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        } else {\r\n            theParent = null\r\n        }\r\n\r\n        if (msg.children === undefined || msg.children.length === 0) {\r\n            btn.push(<button key=\"delete\" type=\"button\" className=\"btn btn-danger btn-sm\" onClick={this.handleDelete.bind(this)}>Borrar</button>)\r\n        }\r\n        btn.push(<Link key={msg.id} to={`${msg.id}/edit`}><button type=\"button\" className=\"btn btn-warning btn-sm\">Editar</button></Link>)\r\n        btn.push(<Link key=\"reply\" to={`${msg.id}/reply`}><button type=\"button\" className=\"btn btn-success btn-sm\">Responder</button></Link>)\r\n\r\n        // console.log(\"This message's children are: \", chi)\r\n        let replies = chi.map(\r\n            (item) =>\r\n                <tr key={item.id} className=\"text-right\">\r\n                    <td>\r\n                         <div className=\"container\">\r\n                            <b>{item.user} • <Link className=\"text-dark\" to={`/reply/${item.id}`}>{item.message}</Link></b>\r\n                            <p>{item.content}\r\n                            <br></br>\r\n                            Respuestas: {item.children === undefined ? 0 : item.children.length}</p>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n\r\n        )\r\n        // console.log(replies)\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table\"><tbody>{theParent}</tbody></table>\r\n                <div className=\"card border\">\r\n                    <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{msg.user} • {msg.message}</h5>\r\n                        <p className=\"card-text\">{msg.content}</p>\r\n                    </div>\r\n                    <div className=\"card-footer text-muted text-right\">\r\n                        {btn}\r\n                    </div>\r\n                </div>\r\n                    <table className=\"table table-success\">\r\n                        <tbody>{replies}</tbody>\r\n                    </table>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport firebase from '../../config/firebase.js'\r\nimport MessageForm from './MessageForm'\r\n\r\nexport default class MessageEdit extends Component {\r\n    constructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n            message:{id: \"\"},\r\n            // db: firebase.firestore()\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        // let msgRef = this.state.db.collection('messages').doc(`${params.id}`);\r\n        firebase.getMessage(`${params.id}`)\r\n        // msgRef.get()\r\n            .then(doc => {\r\n                if (!doc.exists) {\r\n                    console.log('No such document!');\r\n                } else {\r\n                    console.log('Document data:', doc.data());\r\n                    this.setState({message: doc.data()});\r\n                }\r\n            })\r\n    }\r\n\r\n    handleSubmit(message) {\r\n        firebase.submitMessage(message)\r\n            .then(doc => {\r\n                console.log(doc);\r\n                console.log(\"Message saved.\")\r\n                const { history } = this.props;\r\n                history.push(`/messages/${message.id}`);\r\n            });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n\r\n        const { history } = this.props;\r\n        const { message } = this.state;\r\n\r\n        history.push(`/messages/${message.id}`);\r\n\r\n        console.log(\"You've cancelled the edit.\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Editar Mensaje</h2>\r\n                <MessageForm msg={this.state.message} onSubmit={this.handleSubmit.bind(this)} onCancel={this.handleCancel.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport firebase from '../../config/firebase.js'\r\nimport MessageForm from './MessageForm'\r\n\r\nexport default class MessageReply extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n            parentmsg:{id:\"\"},\r\n            message:{id: \"\"},\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        firebase.getMessage(`${params.id}`)\r\n            .then(doc => {\r\n                if (!doc.exists) {\r\n                    console.log('No such document!');\r\n                } else {\r\n                    console.log('Document data:', doc.data());\r\n                    this.setState({parentmsg: doc.data()});\r\n                }\r\n            })\r\n    }\r\n\r\n    handleSubmit(message) {\r\n        // Submitting the Reply\r\n        let reply = {\r\n            parent: this.state.parentmsg.id,\r\n            id: message.id,\r\n            message: message.message,\r\n            content: message.content,\r\n            user: message.user\r\n        }\r\n        firebase.submitMessage(reply)\r\n        .then(doc => {\r\n            console.log(doc);\r\n            console.log(\"Reply saved.\")\r\n        });\r\n        \r\n        // Updating the Parent\r\n        let parent ={\r\n            id: this.state.parentmsg.id,\r\n            message: this.state.parentmsg.message,\r\n            content: this.state.parentmsg.content,\r\n            user: this.state.parentmsg.user,\r\n            children: this.state.parentmsg.children\r\n        }\r\n        if(parent.children === undefined){\r\n            parent.children = [];\r\n        }\r\n        parent.children.push(reply.id)\r\n        firebase.submitMessage(parent)\r\n            .then(doc => {\r\n                console.log(doc);\r\n                console.log(\"Parent updated.\")\r\n                const { history } = this.props;\r\n                history.push(`/messages/${message.id}`);\r\n            });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n\r\n        const { history } = this.props;\r\n        const { parentmsg } = this.state;\r\n        history.push(`/messages/${parentmsg.id}`);\r\n        console.log(\"You've cancelled the edit.\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2><b>Responder a:</b> {this.state.parentmsg.message}</h2>\r\n                <MessageForm msg={this.state.message} onSubmit={this.handleSubmit.bind(this)} onCancel={this.handleCancel.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class User extends Component {\r\n\r\n    handleDelete() {\r\n        let user = this.props.user\r\n        this.props.handleDelete(user)\r\n    }\r\n\r\n    render() {\r\n        let user = this.props.user;\r\n        return (\r\n            <tr>\r\n                <td>{user.id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.lastname}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.password}</td>\r\n                <td>{user.activo}</td>\r\n                <td><button className=\"btn btn-sm btn-success\"><div className=\"fas fa-user\" /></button></td>\r\n                <td><button className=\"btn btn-sm btn-warning\"><div className=\"fas fa-pencil-alt\" /></button></td>\r\n                <td><button className=\"btn btn-sm btn-danger\" onClick={this.handleDelete.bind(this)}><div className=\"fas fa-trash\" /></button></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport User from './User'\r\n\r\nexport default class UserList extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    handleDelete(user) {\r\n        this.props.handleDelete(user);\r\n    }\r\n\r\n    render() {\r\n        let userList = this.props.users.map(\r\n            (item) =>\r\n                (<User key={item.id} user={item} handleDelete={this.handleDelete.bind(this)} />)\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <table className=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Apellido</th>\r\n                            <th>Correo</th>\r\n                            <th>Contraseña</th>\r\n                            <th>Activo</th>\r\n                            <th colSpan=\"3\">Acciones</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userList}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport UserList from './UserList'\r\nimport firebase from '../../config/firebase.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Users extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n        }\r\n    }\r\n\r\n    handleDelete(user) {\r\n        const { history } = this.props;\r\n        console.log(\"list:\",user)\r\n        firebase.deleteUser(user)\r\n            .then(() => {\r\n                console.log(\"user deleted\")\r\n                this.refresh()\r\n            });\r\n    }\r\n\r\n    refresh() {\r\n        let users = [];\r\n        firebase.getUsers().then(\r\n            (querySnapshot) => {\r\n                querySnapshot.forEach(\r\n                    doc => users.push(doc.data())\r\n                );\r\n                this.setState(\r\n                    { users }\r\n            )\r\n            }\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        let users = [];\r\n        firebase.getUsers().then(\r\n            (querySnapshot) => {\r\n                querySnapshot.forEach(\r\n                    doc => users.push(doc.data())\r\n                );\r\n                this.setState(\r\n                    { users }\r\n                );\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UserList users={this.state.users} handleDelete={this.handleDelete.bind(this)}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport firebase from '../../config/firebase.js'\r\nimport md5 from \"react-native-md5\";\r\n\r\n\r\n\r\nclass UserAdd extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            lastname: '',\r\n            email: '',\r\n            password: '',\r\n            activo: ''\r\n        }\r\n\r\n        // this.db = firebase.firestore();\r\n        \r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let id = (this.state.id === \"\" || this.state.id === undefined) ? Math.floor(Math.random() * 255).toString() : this.state.id;\r\n        let user = {\r\n            id: id,\r\n            name: this.state.name,\r\n            lastname: this.state.lastname,\r\n            email: this.state.email,\r\n            password: md5.hex_md5(this.state.password),\r\n            activo: this.state.activo\r\n        }\r\n\r\n        //this.props.onSubmit(user)\r\n        \r\n        // this.db.collection('users').doc(user.id).set(user);\r\n        firebase.submitUser(user);\r\n        // this.refresh();\r\n\r\n        const { history } = this.props;\r\n        history.push(`/messages`);\r\n\r\n    }\r\n\r\n\r\n    refresh(){\r\n\r\n        this.setState(\r\n            {\r\n                id: '',\r\n                name: '',\r\n                lastname: '',\r\n                email: '',\r\n                password: '',\r\n                activo: ''\r\n            }\r\n        )\r\n    }\r\n\r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <div className=\"form-group\">\r\n                        <label>Nombre     :</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"nombre\" id='name' value={this.state.name} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Apellido     :</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"apellido\" id='lastname' value={this.state.lastname} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Correo     :</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"example@exten.com\" id='email' value={this.state.email} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password     :</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"password\" id='password' value={this.state.password} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Activo     :</label>\r\n                        <select className=\"form-control form-control\" placeholder=\"escoge estado\" id=\"activo\" value={this.state.activo} onChange={this.handleChange.bind(this)}  >\r\n                            <option></option>\r\n                            <option>Activo</option>\r\n                            <option>No Activo</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAdd;","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport Home from '../components/Home';\r\nimport Messages from '../components/message/Messages'\r\nimport MessageAdd from '../components/message/MessageAdd'\r\nimport MessageInfo from '../components/message/MessageInfo'\r\nimport MessageEdit from '../components/message/MessageEdit'\r\nimport MessageReply from '../components/message/MessageReply'\r\nimport Users from '../components/user/Users'\r\nimport UserAdd from '../components/user/UserAdd'\r\n\r\nconst routing = (\r\n\r\n    <Router basename='/'>\r\n\r\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                <ul className=\"navbar-nav mr-auto my-2 my-lg-0 \" >\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link fas fa-home\">   Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/messages\" className=\"nav-link fas\">   Mensajes</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/users\" className=\"nav-link fas\">   Usuarios</Link>\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto my-5 my-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/register\" className=\"nav-link fas fa-book\">    Registrarme</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/login\" className=\"nav-link fas fa-key\">    Acceder</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n\r\n\r\n        <Switch>\r\n            <Route path = '/users' component = {Users}/>\r\n            <Route path='/messages/add' component={MessageAdd} />\r\n            <Route path='/messages/:id/reply' component={MessageReply} />\r\n            <Route path='/messages/:id/edit' component={MessageEdit} />\r\n            <Redirect from='/reply/:id' to='/messages/:id' />\r\n            <Route path='/messages/:id' component={MessageInfo} />\r\n            <Route path='/messages' component={Messages} />\r\n            <Route exact path='/' component={Home} />\r\n            <Route path='/register' component={UserAdd} />\r\n        </Switch>\r\n    </Router>\r\n\r\n)\r\n\r\nexport default routing\r\n","import React, { Component } from 'react';\nimport Router from './config/Router'\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n        {Router}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}